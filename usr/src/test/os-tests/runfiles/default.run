#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source.  A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#

#
# Copyright (c) 2012 by Delphix. All rights reserved.
# Copyright 2020 Joyent, Inc.
# Copyright 2022 OmniOS Community Edition (OmniOSce) Association.
# Copyright 2021 Tintri by DDN, Inc. All rights reserved.
# Copyright 2024 Oxide Computer Company
# Copyright 2022 MNX Cloud, Inc.
#

[DEFAULT]
pre =
verbose = False
quiet = False
timeout = 60
post =
outputdir = /var/tmp/test_results

[/opt/os-tests/tests/poll_test]
user = root
tests = ['poll_test', 'epoll_test']

[/opt/os-tests/tests/eventfd.32]
[/opt/os-tests/tests/eventfd.64]

[/opt/os-tests/tests/odirectory.32]
[/opt/os-tests/tests/odirectory.64]

[/opt/os-tests/tests/clock_gettime.32]
[/opt/os-tests/tests/clock_gettime.64]

[/opt/os-tests/tests/ucontext.32]
[/opt/os-tests/tests/ucontext.64]
[/opt/os-tests/tests/getcontext_extd.32]
[/opt/os-tests/tests/getcontext_extd.64]

[/opt/os-tests/tests/secflags]
user = root
tests = ['secflags_aslr',
         'secflags_core',
         'secflags_dts',
         'secflags_elfdump',
         'secflags_forbidnullmap',
         'secflags_limits',
         'secflags_noexecstack',
         'secflags_proc',
         'secflags_psecflags',
         'secflags_syscall',
         'secflags_truss',
         'secflags_zonecfg']

[/opt/os-tests/tests/signalfd]
tests = ['basic_args', 'basic_read', 'multipoll']

[/opt/os-tests/tests/sigqueue]
tests = ['sigqueue_queue_size']

[/opt/os-tests/tests/sdevfs]
user = root
tests = ['sdevfs_eisdir']

[/opt/os-tests/tests/stress]
user = root
tests = ['dladm-kstat']

[/opt/os-tests/tests/timer]
user = root
tests = ['timer_limit']

[/opt/os-tests/tests/file-locking]
tests = ['runtests.32', 'runtests.64']

[/opt/os-tests/tests/sockfs]
user = root
tests = ['conn', 'dgram', 'drop_priv', 'nosignal', 'rights.32', 'rights.64',
         'sockpair', 'recvmsg.32', 'recvmsg.64']

[/opt/os-tests/tests/syscall]
tests = ['fchmodat.32', 'fchmodat.64', 'open.32', 'open.64']

[/opt/os-tests/tests/pf_key]
user = root
timeout = 180
tests = ['acquire-compare', 'kmc-update', '15146']

[/opt/os-tests/tests/ddi_ufm]
user = root
tests = ['ufm-test-setup', 'ufm-test', 'ufm-test-cleanup']

[/opt/os-tests/tests/definit/definit]

[/opt/os-tests/tests/ksid]
tests = ['ksid.32','ksid.64']

[/opt/os-tests/tests/i386]
user = root
arch = i86pc
timeout = 300
tests = ['ldt', 'badseg']

[/opt/os-tests/tests/writev.32]
[/opt/os-tests/tests/writev.64]

[/opt/os-tests/tests/imc_test]
arch = i86pc

#
# Except atrparse all tests require special hardware (CCID YubiKey) to run,
# hence they aren't included in the default runfile.
#
[/opt/os-tests/tests/uccid]
arch = i86pc
tests = ['atrparse']

[/opt/os-tests/tests/libtopo]
user = root
tests = ['digraph-test']

#
# Only the ksensor functional tests are included in the run file.
# The stress test is designed to be run separately.
#
[/opt/os-tests/tests/ksensor]
pre_user = root
user = root
post_user = root
pre = ksensor_init
tests = [ 'ksensor_basic.32','ksensor_basic.64', 'ksensor_err.32',
    'ksensor_err.64' ]
post = ksensor_fini

[/opt/os-tests/tests/stackalign]
tests = ['stackalign.32', 'stackalign.64']

[/opt/os-tests/tests/cores]
user = root
pre = core_prereqs
tests = ['coretests']

[/opt/os-tests/tests/zen_umc_test]

[/opt/os-tests/tests/portfs]
tests = ['file_assoc.32', 'file_assoc.64']

[/opt/os-tests/tests/regression]
tests = [
	'illumos-15031',
	'illumos-15036'
	]

#
# The following tests all represent tests that require the xsave feature
# set. These are all x86 specific. The use of arch=i86pc below doesn't
# really represent things that can be run on x86 regardless of the
# platform and when the test runner gains support for specifying that,
# use that instead. This would be split into two groups, but that isn't
# supported, so everything ends up being run as root for the sake of the
# xsave_baducontext test.
#
[/opt/os-tests/tests/xsave]
arch = i86pc
pre = xsu_hwtype.64
user = root
tests = [ 'bad_xregs.32', 'bad_xregs.64', 'mdb_xregs', 'proc_writes',
    'setcontext_replace.32', 'setcontext_replace.64', 'setcontext_restore.32',
    'setcontext_restore.64', 'signal_restore.32', 'signal_restore.64',
    'xregs_roundtrip.32', 'xregs_roundtrip.64', 'xsave_baducontext',
    'fpregs_xbv.32', 'fpregs_xbv.64', 'swapcontext_extd.32',
    'swapcontext_extd.64' ]

[/opt/os-tests/tests/ilstr]
tests = ['ilstr_basic.32', 'ilstr_basic.64']

[/opt/os-tests/tests/execve]
tests = ['execvpe-test.32', 'execvpe-test.64']

[/opt/os-tests/tests/minttl]
user = root
tests = ['minttl', 'minttl_err']

[/opt/os-tests/tests/tcpsig]
pre_user = root
post_user = root
pre = tcpsig_init
tests = ['tcpsig']
post = tcpsig_fini

[/opt/os-tests/tests/fifo-tvnsec.32]
[/opt/os-tests/tests/fifo-tvnsec.64]

[/opt/os-tests/tests/saveargs/functional/functional]
arch = i86pc

[/opt/os-tests/tests/saveargs/testmatch/testmatch]
arch = i86pc
