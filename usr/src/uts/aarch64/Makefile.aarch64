# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright (c) 2005, 2010, Oracle and/or its affiliates. All rights reserved.
# Copyright (c) 2013 Andrew Stormont.  All rights reserved.
# Copyright (c) 2014 by Delphix. All rights reserved.
# Copyright 2019 Joyent, Inc.
# Copyright 2016 Garrett D'Amore <garrett@damore.org>
# Copyright 2018 Nexenta Systems, Inc.
# Copyright 2019 RackTop Systems
# Copyright 2019 Peter Tribble.
# Copyright 2021 Oxide Computer Company
#

#
#	This makefile contains the common definitions for all aarch64
#	implementation architecture independent modules.
#

#
#	Machine type (implementation architecture):
#
PLATFORM	 = armv8

#
#	Everybody needs to know how to build modstubs.o and to locate unix.o.
#	Note that unix.o must currently be selected from among the possible
#	"implementation architectures". Note further, that unix.o is only
#	used as an optional error check for undefines so (theoretically)
#	any "implementation architectures" could be used. We choose armv8
#	because it is the reference port.
#
UNIX_DIR	 = $(UTSBASE)/armv8/unix
GENLIB_DIR	 = $(UTSBASE)/aarch64/genunix
IPDRV_DIR	 = $(UTSBASE)/aarch64/ip
MODSTUBS_DIR	 = $(UNIX_DIR)
DSF_DIR		 = .

UNIX_O		 = $(UNIX_DIR)/$(OBJS_DIR)/unix.o
GENLIB		 = $(GENLIB_DIR)/$(OBJS_DIR)/libgenunix.so
MODSTUBS_O	 = $(MODSTUBS_DIR)/$(OBJS_DIR)/modstubs.o

#
#	Include the makefiles which define build rule templates, the
#	collection of files per module, and a few specific flags. Note
#	that order is significant, just as with an include path. The
#	first build rule template which matches the files name will be
#	used. By including these in order from most machine dependent
#	to most machine independent, we allow a machine dependent file
#	to be used in preference over a machine independent version
#	(Such as a machine specific optimization, which preserves the
#	interfaces.)
#
include $(UTSBASE)/aarch64/Makefile.files
include $(UTSBASE)/common/Makefile.files

#
# ----- TRANSITIONAL SECTION --------------------------------------------------
#

#
#	Not everything which *should* be a module is a module yet. The
#	following is a list of such objects which are currently part of
#	genunix but which might someday become kmods.  This must be
#	defined before we include Makefile.uts, or else genunix's build
#	won't be as parallel as we might like.
#
NOT_YET_KMODS	 = $(OLDPTY_OBJS) $(PTY_OBJS) $(VCONS_CONF_OBJS) $(MOD_OBJS)

#
# ----- END OF TRANSITIONAL SECTION -------------------------------------------
#
#	Include machine independent rules. Note that this does not imply
#	that the resulting module from rules in Makefile.uts is	machine
#	independent. Only that the build rules are machine independent.
#
include $(UTSBASE)/Makefile.uts

#
#	The following must be defined for all implementations:
#
MODSTUBS		= $(UTSBASE)/aarch64/ml/modstubs.S

#
#	Define supported builds
#
DEF_BUILDS		= $(DEF_BUILDS64)
ALL_BUILDS		= $(ALL_BUILDS64)

#
#	kernel-specific optimizations; override default in Makefile.master
#

CFLAGS_XARCH_32		= $(i386_CFLAGS) # mmm...
CFLAGS_XARCH_64		= $(aarch64_CFLAGS)
CFLAGS_XARCH		= $(CFLAGS_XARCH_$(CLASS))

COPTFLAG_32		= $(COPTFLAG)
COPTFLAG_64		= $(COPTFLAG64)
COPTIMIZE		= $(COPTFLAG_$(CLASS))

CFLAGS			= $(CFLAGS_XARCH)
CFLAGS			+= $(COPTIMIZE)
CFLAGS			+= -D_ASM_INLINES
CFLAGS			+= $(CCMODE)
CFLAGS			+= $(SPACEFLAG)
CFLAGS			+= $(CCUNBOUND)
CFLAGS			+= $(CFLAGS_uts)
CFLAGS			+= $(STACKPROTECT_$(STACKPROTECT))

ASFLAGS_XARCH_32	= $(i386_ASFLAGS) # mmm...
ASFLAGS_XARCH_64	= $(aarch64_ASFLAGS)
ASFLAGS_XARCH		= $(ASFLAGS_XARCH_$(CLASS))

ASFLAGS			+= $(ASFLAGS_XARCH)

#
#	Debugging level
#
#	Special knowledge of which special debugging options affect which
#	file is used to optimize the build if these flags are changed.
#
DEBUG_DEFS_OBJ32	=
DEBUG_DEFS_DBG32	= -DDEBUG
DEBUG_DEFS_OBJ64	=
DEBUG_DEFS_DBG64	= -DDEBUG
DEBUG_DEFS		= $(DEBUG_DEFS_$(BUILD_TYPE))

DEBUG_COND_OBJ32	= $(POUND_SIGN)
DEBUG_COND_DBG32	=
DEBUG_COND_OBJ64	= $(POUND_SIGN)
DEBUG_COND_DBG64	=
IF_DEBUG_OBJ		= $(DEBUG_COND_$(BUILD_TYPE))$(OBJS_DIR)/

$(IF_DEBUG_OBJ)syscall.o	:=	DEBUG_DEFS	+= -DSYSCALLTRACE
$(IF_DEBUG_OBJ)clock.o		:=	DEBUG_DEFS	+= -DKSLICE=1

#
#	Collect the preprocessor definitions to be associated with *all*
#	files.
#
ALL_DEFS	 = $(DEBUG_DEFS) $(OPTION_DEFS)

#
#	TCP congestion control modules (/kernel/cc)
#
CC_KMODS	+=	\
	cc_cubic	\
	cc_newreno	\
	cc_sunreno

# Driver modules (/kernel/drv)
DRV_KMODS	+=	\
	aac		\
	afe		\
	aggr		\
	ahci		\
	arn		\
	arp		\
	asy		\
	atge		\
	atu		\
	audio		\
	audio1575	\
	audio810	\
	audiocmi	\
	audiocmihd	\
	audioemu10k	\
	audioens	\
	audiohd		\
	audioixp	\
	audiols		\
	audiop16x	\
	audiopci	\
	audiosolo	\
	audiots		\
	audiovia823x	\
	av1394		\
	axf		\
	bfe		\
	bge		\
	bl		\
	blkdev		\
	bnx		\
	bnxe		\
	bofi		\
	bpf		\
	bridge		\
	ccid		\
	chxge		\
	clone		\
	cn		\
	conskbd		\
	consms		\
	cpuid		\
	crypto		\
	cryptoadm	\
	daplt		\
	dca		\
	dcam1394	\
	devinfo		\
	dld		\
	dlpistub	\
	dmfe		\
	dprov		\
	dump		\
	e1000g		\
	efe		\
	ehci		\
	eibnx		\
	elxl		\
	emul64		\
	ena		\
	eoib		\
	eventfd		\
	fm		\
	fssnap		\
	gen_drv		\
	hci1394		\
	hermon		\
	hid		\
	hme		\
	hubd		\
	ib		\
	ibp		\
	icmp		\
	icmp6		\
	igb		\
	ip		\
	ip6		\
	ipd		\
	ipf		\
	ipnet		\
	ippctl		\
	iprb		\
	ipsecah		\
	ipsecesp	\
	iptun		\
	ipw		\
	iscsi		\
	iscsit		\
	iser		\
	iwh		\
	iwi		\
	iwk		\
	iwn		\
	iwp		\
	iwscn		\
	ixgbe		\
	keysock		\
	ksensor_test	\
	kstat		\
	ksyms		\
	llc1		\
	lofi		\
	log		\
	logindmux	\
	mega_sas	\
	mm		\
	mpt_sas		\
	mr_sas		\
	mxfe		\
	nge		\
	nsmb		\
	ntxn		\
	nulldriver	\
	nvme		\
	nxge		\
	oce		\
	ohci		\
	openeepr	\
	options		\
	overlay		\
	pcn		\
	physmem		\
	pm		\
	poll		\
	pool		\
	pppt		\
	pseudo		\
	pshot		\
	ptc		\
	ptm		\
	pts		\
	ptsl		\
	qede		\
	qlc		\
	qlge		\
	ral		\
	ramdisk		\
	random		\
	rds		\
	rdsv3		\
	rge		\
	rpcib		\
	rsm		\
	rtls		\
	rts		\
	rtw		\
	rum		\
	rwd		\
	rwn		\
	sad		\
	scsa1394	\
	scsa2usb	\
	scsi_vhci	\
	sd		\
	sdhost		\
	ses		\
	sfe		\
	sfxge		\
	sgen		\
	si3124		\
	signalfd	\
	simnet		\
	skd		\
	smbios		\
	smbsrv		\
	smp		\
	softmac		\
	sol_ucma	\
	sol_umad	\
	sol_uverbs	\
	spdsock		\
	sppp		\
	sppptun		\
	srn		\
	st		\
	stmf		\
	stmf_sbd	\
	sy		\
	sysevent	\
	sysmsg		\
	tavor		\
	tclient		\
	tcp		\
	tcp6		\
	timerfd		\
	tl		\
	tphci		\
	trill		\
	tvhci		\
	uath		\
	udmf		\
	udp		\
	udp6		\
	ufm		\
	ufmtest		\
	ugen		\
	uhci		\
	upf		\
	ural		\
	urf		\
	urtw		\
	usb_ac		\
	usb_as		\
	usb_ia		\
	usb_mid		\
	usbecm		\
	usbftdi		\
	usbgem		\
	usbprn		\
	usbsacm		\
	usbser		\
	usbskel		\
	usbsksp		\
	usbsprl		\
	usbvc		\
	vio9p		\
	vioblk		\
	vioif		\
	virtio		\
	vnic		\
	vr		\
	vscan		\
	wc		\
	winlock		\
	wpi		\
	xge		\
	xhci		\
	yge		\
	zcons		\
	zyd		\

#
#	Exec Class Modules (/kernel/exec):
#
EXEC_KMODS	+=	\
	elfexec		\
	intpexec	\
	shbinexec

#
#	Scheduling Class Modules (/kernel/sched):
#
SCHED_KMODS	+=	\
	FSS		\
	FX		\
	FX_DPTBL	\
	IA		\
	RT		\
	RT_DPTBL	\
	SDC		\
	TS		\
	TS_DPTBL

#
#	File System Modules (/kernel/fs):
#
FS_KMODS	+=	\
	autofs		\
	bootfs		\
	ctfs		\
	dcfs		\
	dev		\
	devfs		\
	fdfs		\
	fifofs		\
	hsfs		\
	lofs		\
	mntfs		\
	namefs		\
	nfs		\
	objfs		\
	pcfs		\
	procfs		\
	sharefs		\
	smbfs		\
	sockfs		\
	specfs		\
	tmpfs		\
	udfs		\
	ufs		\
	zfs		\
	zut

#
#	Streams Modules (/kernel/strmod):
#
STRMOD_KMODS	+=	\
	bufmod		\
	connld		\
	cryptmod	\
	dedump		\
	drcompat	\
	ldterm		\
	pckt		\
	pfmod		\
	pipemod		\
	ptem		\
	redirmod	\
	rlmod		\
	rpcmod		\
	spppasyn	\
	spppcomp	\
	telmod		\
	timod		\
	tirdwr		\
	ttcompat	\
	usb_ah		\
	usbkbm		\
	usbms		\
	usbwcm

#
#	'System' Modules (/kernel/sys):
#
SYS_KMODS	+=	\
	acctctl		\
	c2audit		\
	doorfs		\
	exacctsys	\
	inst_sync	\
	kaio		\
	msgsys		\
	pipe		\
	portfs		\
	pset		\
	semsys		\
	shmsys		\
	sysacct

#
#	'Misc' Modules (/kernel/misc)
MISC_KMODS	+=		\
	ac97			\
	bignum			\
	busra			\
	cc			\
	cmlb			\
	consconfig		\
	ctf			\
	dls			\
	emlxs_fw		\
	fctl			\
	fssnap_if		\
	gld			\
	hidparser		\
	hook			\
	ibcm			\
	ibdm			\
	ibdma			\
	ibmf			\
	ibtl			\
	idm			\
	idmap			\
	ipc			\
	kbtrans			\
	kcf			\
	kgssapi			\
	klmmod			\
	klmops			\
	kmech_dummy		\
	kmech_krb5		\
	ksocket			\
	mac			\
	mii			\
	net80211		\
	neti			\
	nfs_dlboot		\
	nfssrv			\
	qlc_fw_2200		\
	qlc_fw_2300		\
	qlc_fw_2400		\
	qlc_fw_2500		\
	qlc_fw_6322		\
	qlc_fw_8100		\
	rpcsec			\
	rpcsec_gss		\
	rsmops			\
	s1394			\
	sata			\
	sbp2			\
	scsi			\
	scsi_vhci_f_sym		\
	scsi_vhci_f_sym_hds	\
	scsi_vhci_f_tape	\
	scsi_vhci_f_tpgs	\
	scsi_vhci_f_tpgs_tape	\
	sda			\
	sol_ofs			\
	strplumb		\
	tem			\
	tlimod			\
	usba			\
	usba10			\
	usbs49_fw

#
#	Software Cryptographic Providers (/kernel/crypto):
#
CRYPTO_KMODS	+=	\
	aes		\
	arcfour		\
	blowfish	\
	des		\
	ecc		\
	edonr		\
	md4		\
	md5		\
	rsa		\
	sha1		\
	sha2		\
	skein		\
	swrand

#
#	IP Policy Modules (/kernel/ipp)
#
IPP_KMODS	+=	\
	dlcosmk		\
	dscpmk		\
	flowacct	\
	ipgpc		\
	tokenmt		\
	tswtclmt

#
#	generic-unix module (/kernel/genunix):
#
GENUNIX_KMODS	+= genunix

#
#	MAC-Type Plugin Modules (/kernel/mac)
#
MAC_KMODS	+=	\
	mac_6to4	\
	mac_ether	\
	mac_ipv4	\
	mac_ipv6	\
	mac_wifi

#
#	Overlay related modules (/kernel/overlay)
#
OVERLAY_KMODS	+= vxlan

#
# socketmod (kernel/socketmod)
#
SOCKET_KMODS	+= \
	sockpfp	\
	socksctp	\
	sockrds

#
#	kiconv modules (/kernel/kiconv):
#
KICONV_KMODS	+=	\
	kiconv_emea	\
	kiconv_ja	\
	kiconv_ko	\
	kiconv_sc	\
	kiconv_tc

#
#	'Dacf' Modules (/kernel/dacf):
#
DACF_KMODS	+= net_dacf
