/*
 * CDDL HEADER START
 *
 * The contents of this file are subject to the terms of the
 * Common Development and Distribution License (the "License").
 * You may not use this file except in compliance with the License.
 *
 * You can obtain a copy of the license at src/OPENSOLARIS.LICENSE
 * or http://www.opensolaris.org/os/licensing.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 *
 * When distributing Covered Code, include this CDDL HEADER in each
 * file and include the License file at src/OPENSOLARIS.LICENSE.
 * If applicable, add the following below this CDDL HEADER, with the
 * fields enclosed by brackets "[]" replaced with your own identifying
 * information: Portions Copyright [yyyy] [name of copyright owner]
 *
 * CDDL HEADER END
 */
/*
 *  ICU License - ICU 1.8.1 and later
 *
 *  COPYRIGHT AND PERMISSION NOTICE
 *
 * Copyright (c) 1995-2005 International Business Machines Corporation and others
 * All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, and/or sell copies of the Software, and to permit persons
 * to whom the Software is furnished to do so, provided that the above
 * copyright notice(s) and this permission notice appear in all copies of
 * the Software and that both the above copyright notice(s) and this
 * permission notice appear in supporting documentation.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT
 * OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 * HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL
 * INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING
 * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Except as contained in this notice, the name of a copyright holder
 * shall not be used in advertising or otherwise to promote the sale, use
 * or other dealings in this Software without prior written authorization
 * of the copyright holder.
 *
 * --------------------------------------------------------------------------
 * All trademarks and registered trademarks mentioned herein are the property
 * of their respective owners.
 */

//
// Copyright (c) 2000 by Sun Microsystems, Inc.
// All rights reserved.
//
//

IBM-871%UTF-8 {
    direction {
	condition {
		between 0x0...0x3;
	} map {
		0x00	0x00	// U+0000
		0x01	0x01	// U+0001
		0x02	0x02	// U+0002
		0x03	0x03	// U+0003
	};
	condition {
		between 0x4...0x4;
	} map {
		0x04    0xc29c  // U+009C
	};
	condition {
		between 0x5...0x5;
	} map {
		0x05	0x09	// U+0009
	};
	condition {
		between 0x6...0x6;
	} map {
		0x06	0xc286	// U+0086
	};
	condition {
		between 0x7...0x7;
	} map {
		0x07	0x7f	// U+007F
	};
	condition {
		between 0x8...0xa;
	} map {
		0x08	0xc297	// U+0097
		0x09	0xc28d	// U+008D
		0x0a	0xc28e	// U+008E
	};
	condition {
		between 0xb...0x13;
	} map {
		0x0b	0x0b	// U+000B
		0x0c	0x0c	// U+000c
		0x0d	0x0d	// U+000d
		0x0e	0x0e	// U+000E
		0x0f	0x0f	// U+000F
		0x10	0x10	// U+0010
		0x11	0x11	// U+0011
		0x12	0x12	// U+0012
		0x13	0x13	// U+0013
	};
	condition {
		between 0x14...0x15;
	} map {
		0x14	0xc29d	// U+009D
		0x15	0xc285	// U+0085
	};
	condition {
		between 0x16...0x16;
	} map {
		0x16	0x08	// U+0008
	};
	condition {
		between 0x17...0x17;
	} map {
		0x17	0xc287	// U+0087
	};
	condition {
		between 0x18...0x19;
	} map {
		0x18	0x18	// U+0018
		0x19	0x19	// U+0019
	};
	condition {
		between 0x1a...0x1b;
	} map {
		0x1a	0xc292	// U+0092
		0x1b	0xc28f	// U+008F
	};
	condition {
		between 0x1c...0x1f;
	} map {
		0x1c	0x1c	// U+001C
		0x1d	0x1d	// U+001D
		0x1e	0x1e	// U+001E
		0x1f	0x1f	// U+001F
	};
	condition {
		between 0x20...0x24;
	} map {
		0x20	0xc280	// U+0080
		0x21	0xc281	// U+0081
		0x22	0xc282	// U+0082
		0x23	0xc283	// U+0083
		0x24	0xc284	// U+0084
	};
	condition {
		between 0x25...0x27;
	} map {
		0x25	0x0a	// U+000a
		0x26	0x17	// U+0017
		0x27	0x1b	// U+001B
	};
	condition {
		between 0x28...0x2c;
	} map {
		0x28	0xc288	// U+0088
		0x29	0xc289	// U+0089
		0x2a	0xc28a	// U+008A
		0x2b	0xc28b	// U+008B
		0x2c	0xc28c	// U+008C
	};
	condition {
		between 0x2d...0x2f;
	} map {
		0x2d	0x05	// U+0005
		0x2e	0x06	// U+0006
		0x2f	0x07	// U+0007
	};
	condition {
		between 0x30...0x31;
	} map {
		0x30	0xc290	// U+0090
		0x31	0xc291	// U+0091
	};
	condition {
		between 0x32...0x32;
	} map {
		0x32	0x16	// U+0016
	};
	condition {
		between 0x33...0x36;
	} map {
		0x33	0xc293	// U+0093
		0x34	0xc294	// U+0094
		0x35	0xc295	// U+0095
		0x36	0xc296	// U+0096
	};
	condition {
		between 0x37...0x37;
	} map {
		0x37	0x04	// U+0004
	};
	condition {
		between 0x38...0x3b;
	} map {
		0x38	0xc298	// U+0098
		0x39	0xc299	// U+0099
		0x3a	0xc29a	// U+009A
		0x3b	0xc29b	// U+009B
	};
	condition {
		between 0x3c...0x3d;
	} map {
		0x3c	0x14	// U+0014
		0x3d	0x15	// U+0015
	};
	condition {
		between 0x3e...0x3e;
	} map {
		0x3e	0xc29e	// U+009E
	};
	condition {
		between 0x3f...0x40;
	} map {
		0x3f	0x1a	// U+001A
		0x40	0x20	// U+0020
	};
	condition {
		between 0x41...0x4a;
	} map {
		0x41	0xc2a0	// U+00A0
		0x42	0xc3a2	// U+00E2
		0x43	0xc3a4	// U+00E4
		0x44	0xc3a0	// U+00E0
		0x45	0xc3a1	// U+00E1
		0x46	0xc3a3	// U+00E3
		0x47	0xc3a5	// U+00E5
		0x48	0xc3a7	// U+00E7
		0x49	0xc3b1	// U+00F1
		0x4a	0xc39e	// U+00DE
	};
	condition {
		between 0x4b...0x50;
	} map {
		0x4b	0x2e	// U+002E
		0x4c	0x3c	// U+003C
		0x4d	0x28	// U+0028
		0x4e	0x2b	// U+002B
		0x4f	0x21	// U+0021
		0x50	0x26	// U+0026
	};
	condition {
		between 0x51...0x5a;
	} map {
		0x51	0xc3a9	// U+00E9
		0x52	0xc3aa	// U+00EA
		0x53	0xc3ab	// U+00EB
		0x54	0xc3a8	// U+00E8
		0x55	0xc3ad	// U+00ED
		0x56	0xc3ae	// U+00EE
		0x57	0xc3af	// U+00EF
		0x58	0xc3ac	// U+00EC
		0x59	0xc39f	// U+00DF
		0x5a	0xc386	// U+00C6
	};
	condition {
		between 0x5b...0x5e;
	} map {
		0x5b	0x24	// U+0024
		0x5c	0x2a	// U+002A
		0x5d	0x29	// U+0029
		0x5e	0x3b	// U+003B
	};
	condition {
		between 0x5f...0x5f;
	} map {
		0x5f	0xc396	// U+00D6
	};
	condition {
		between 0x60...0x61;
	} map {
		0x60	0x2d	// U+002D
		0x61	0x2f	// U+002F
	};
	condition {
		between 0x62...0x6a;
	} map {
		0x62	0xc382	// U+00C2
		0x63	0xc384	// U+00C4
		0x64	0xc380	// U+00C0
		0x65	0xc381	// U+00C1
		0x66	0xc383	// U+00C3
		0x67	0xc385	// U+00C5
		0x68	0xc387	// U+00C7
		0x69	0xc391	// U+00D1
		0x6a	0xc2a6	// U+00A6
	};
	condition {
		between 0x6b...0x6f;
	} map {
		0x6b	0x2c	// U+002C
		0x6c	0x25	// U+0025
		0x6d	0x5f	// U+005F
		0x6e	0x3e	// U+003E
		0x6f	0x3f	// U+003F
	};
	condition {
		between 0x70...0x79;
	} map {
		0x70	0xc3b8	// U+00F8
		0x71	0xc389	// U+00C9
		0x72	0xc38a	// U+00CA
		0x73	0xc38b	// U+00CB
		0x74	0xc388	// U+00C8
		0x75	0xc38d	// U+00CD
		0x76	0xc38e	// U+00CE
		0x77	0xc38f	// U+00CF
		0x78	0xc38c	// U+00CC
		0x79	0xc3b0	// U+00F0
	};
	condition {
		between 0x7a...0x7b;
	} map {
		0x7a	0x3a	// U+003A
		0x7b	0x23	// U+0023
	};
	condition {
		between 0x7c...0x7c;
	} map {
		0x7c	0xc390	// U+00D0
	};
	condition {
		between 0x7d...0x7f;
	} map {
		0x7d	0x27	// U+0027
		0x7e	0x3d	// U+003D
		0x7f	0x22	// U+0022
	};
	condition {
		between 0x80...0x80;
	} map {
		0x80	0xc398	// U+00D8
	};
	condition {
		between 0x81...0x89;
	} map {
		0x81	0x61	// U+0061
		0x82	0x62	// U+0062
		0x83	0x63	// U+0063
		0x84	0x64	// U+0064
		0x85	0x65	// U+0065
		0x86	0x66	// U+0066
		0x87	0x67	// U+0067
		0x88	0x68	// U+0068
		0x89	0x69	// U+0069
	};
	condition {
		between 0x8a...0x8b;
	} map {
		0x8a	0xc2ab	// U+00AB
		0x8b	0xc2bb	// U+00BB
	};
	condition {
		between 0x8c...0x8c;
	} map {
		0x8c	0x60	// U+0060
	};
	condition {
		between 0x8d...0x8d;
	} map {
		0x8d	0xc3bd	// U+00FD
	};
	condition {
		between 0x8e...0x8e;
	} map {
		0x8e	0x7b	// U+007B
	};
	condition {
		between 0x8f...0x90;
	} map {
		0x8f	0xc2b1	// U+00B1
		0x90	0xc2b0	// U+00B0
	};
	condition {
		between 0x91...0x99;
	} map {
		0x91	0x6a	// U+006A
		0x92	0x6b	// U+006B
		0x93	0x6c	// U+006C
		0x94	0x6d	// U+006D
		0x95	0x6e	// U+006E
		0x96	0x6f	// U+006F
		0x97	0x70	// U+0070
		0x98	0x71	// U+0071
		0x99	0x72	// U+0072
	};
	condition {
		between 0x9a...0x9b;
	} map {
		0x9a	0xc2aa	// U+00AA
		0x9b	0xc2ba	// U+00BA
	};
	condition {
		between 0x9c...0x9c;
	} map {
		0x9c	0x7d	// U+007D
	};
	condition {
		between 0x9d...0x9d;
	} map {
		0x9d	0xc2b8	// U+00B8
	};
	condition {
		between 0x9e...0x9e;
	} map {
		0x9e	0x5d	// U+005D
	};
	condition {
		between 0x9f...0xa1;
	} map {
		0x9f	0xc2a4	// U+00A4
		0xa0	0xc2b5	// U+00B5
		0xa1	0xc3b6	// U+00F6
	};
	condition {
		between 0xa2...0xa9;
	} map {
		0xa2	0x73	// U+0073
		0xa3	0x74	// U+0074
		0xa4	0x75	// U+0075
		0xa5	0x76	// U+0076
		0xa6	0x77	// U+0077
		0xa7	0x78	// U+0078
		0xa8	0x79	// U+0079
		0xa9	0x7a	// U+007A
	};
	condition {
		between 0xaa...0xab;
	} map {
		0xaa	0xc2a1	// U+00A1
		0xab	0xc2bf	// U+00BF
	};
	condition {
		between 0xac...0xac;
	} map {
		0xac	0x40	// U+0040
	};
	condition {
		between 0xad...0xad;
	} map {
		0xad	0xc39d	// U+00DD
	};
	condition {
		between 0xae...0xae;
	} map {
		0xae	0x5b	// U+005B
	};
	condition {
		between 0xaf...0xba;
	} map {
		0xaf	0xc2ae	// U+00AE
		0xb0	0xc2a2	// U+00A2
		0xb1	0xc2a3	// U+00A3
		0xb2	0xc2a5	// U+00A5
		0xb3	0xc2b7	// U+00B7
		0xb4	0xc2a9	// U+00A9
		0xb5	0xc2a7	// U+00A7
		0xb6	0xc2b6	// U+00B6
		0xb7	0xc2bc	// U+00BC
		0xb8	0xc2bd	// U+00BD
		0xb9	0xc2be	// U+00BE
		0xba	0xc2ac	// U+00AC
	};
	condition {
		between 0xbb...0xbb;
	} map {
		0xbb	0x7c	// U+007C
	};
	condition {
		between 0xbc...0xbd;
	} map {
		0xbc	0xc2af	// U+00AF
		0xbd	0xc2a8	// U+00A8
	};
	condition {
		between 0xbe...0xbe;
	} map {
		0xbe	0x5c	// U+005c
	};
	condition {
		between 0xbf...0xc0;
	} map {
		0xbf	0xc397	// U+00D7
		0xc0	0xc3be	// U+00FE
	};
	condition {
		between 0xc1...0xc9;
	} map {
		0xc1	0x41	// U+0041
		0xc2	0x42	// U+0042
		0xc3	0x43	// U+0043
		0xc4	0x44	// U+0044
		0xc5	0x45	// U+0045
		0xc6	0x46	// U+0046
		0xc7	0x47	// U+0047
		0xc8	0x48	// U+0048
		0xc9	0x49	// U+0049
	};
	condition {
		between 0xca...0xcb;
	} map {
		0xca	0xc2ad	// U+00AD
		0xcb	0xc3b4	// U+00F4
	};
	condition {
		between 0xcc...0xcc;
	} map {
		0xcc	0x7e	// U+007E
	};
	condition {
		between 0xcd...0xd0;
	} map {
		0xcd	0xc3b2	// U+00F2
		0xce	0xc3b3	// U+00F3
		0xcf	0xc3b5	// U+00F5
		0xd0	0xc3a6	// U+00E6
	};
	condition {
		between 0xd1...0xd9;
	} map {
		0xd1	0x4a	// U+004A
		0xd2	0x4b	// U+004B
		0xd3	0x4c	// U+004C
		0xd4	0x4d	// U+004D
		0xd5	0x4e	// U+004E
		0xd6	0x4f	// U+004F
		0xd7	0x50	// U+0050
		0xd8	0x51	// U+0051
		0xd9	0x52	// U+0052
	};
	condition {
		between 0xda...0xe1;
	} map {
		0xda	0xc2b9	// U+00B9
		0xdb	0xc3bb	// U+00FB
		0xdc	0xc3bc	// U+00FC
		0xdd	0xc3b9	// U+00F9
		0xde	0xc3ba	// U+00FA
		0xdf	0xc3bf	// U+00FF
		0xe0	0xc2b4	// U+00B4
		0xe1	0xc3b7	// U+00F7
	};
	condition {
		between 0xe2...0xe9;
	} map {
		0xe2	0x53	// U+0053
		0xe3	0x54	// U+0054
		0xe4	0x55	// U+0055
		0xe5	0x56	// U+0056
		0xe6	0x57	// U+0057
		0xe7	0x58	// U+0058
		0xe8	0x59	// U+0059
		0xe9	0x5a	// U+005A
	};
	condition {
		between 0xea...0xeb;
	} map {
		0xea	0xc2b2	// U+00B2
		0xeb	0xc394	// U+00D4
	};
	condition {
		between 0xec...0xec;
	} map {
		0xec	0x5e	// U+005E
	};
	condition {
		between 0xed...0xef;
	} map {
		0xed	0xc392	// U+00D2
		0xee	0xc393	// U+00D3
		0xef	0xc395	// U+00D5
	};
	condition {
		between 0xf0...0xf9;
	} map {
		0xf0	0x30	// U+0030
		0xf1	0x31	// U+0031
		0xf2	0x32	// U+0032
		0xf3	0x33	// U+0033
		0xf4	0x34	// U+0034
		0xf5	0x35	// U+0035
		0xf6	0x36	// U+0036
		0xf7	0x37	// U+0037
		0xf8	0x38	// U+0038
		0xf9	0x39	// U+0039
	};
	condition {
		between 0xfa...0xff;
	} map {
		0xfa	0xc2b3	// U+00B3
		0xfb	0xc39b	// U+00DB
		0xfc	0xc39c	// U+00DC
		0xfd	0xc399	// U+00D9
		0xfe	0xc39a	// U+00DA
		0xff	0xc29f	// U+009F
	};
    };
}
