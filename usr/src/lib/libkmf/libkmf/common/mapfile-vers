#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright (c) 2006, 2010, Oracle and/or its affiliates. All rights reserved.
# Copyright 2018, Joyent, Inc.
#
#
# MAPFILE HEADER START
#
# WARNING:  STOP NOW.  DO NOT MODIFY THIS FILE.
# Object versioning must comply with the rules detailed in
#
#	usr/src/lib/README.mapfiles
#
# You should not be making modifications here until you've read the most current
# copy of that file. If you need help, contact a gatekeeper for guidance.
#
# MAPFILE HEADER END
#

$mapfile_version 2

SYMBOL_VERSION SUNW_1.1 {
    global:
	KMFOID_AliasedEntryName			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_AuthorityInfoAccess		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_AuthorityKeyID			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_AuthorityKeyIdentifier		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_AuthorityRevocationList		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_BasicConstraints			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_BusinessCategory			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_CACertificate			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_CertificatePolicies		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_CertificateRevocationList	{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ChallengePassword		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_CollectiveFacsimileTelephoneNumber	{
							  ASSERT = {
								  TYPE = OBJECT;
								  SIZE = addrsize[2];
								};
							};
	KMFOID_CollectiveInternationalISDNNumber	{
							  ASSERT = {
								  TYPE = OBJECT;
								  SIZE = addrsize[2];
								};
							};
	KMFOID_CollectiveOrganizationName		{
							  ASSERT = {
								  TYPE = OBJECT;
								  SIZE = addrsize[2];
								};
							};
	KMFOID_CollectiveOrganizationalUnitName		{
							  ASSERT = {
								  TYPE = OBJECT;
								  SIZE = addrsize[2];
								};
							};
	KMFOID_CollectivePhysicalDeliveryOfficeName	{
							  ASSERT = {
								  TYPE = OBJECT;
								  SIZE = addrsize[2];
								};
							};
	KMFOID_CollectivePostOfficeBox		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_CollectivePostalAddress		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_CollectivePostalCode		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_CollectiveStateProvinceName		{
							  ASSERT = {
								  TYPE = OBJECT;
								  SIZE = addrsize[2];
								};
							};
	KMFOID_CollectiveStreetAddress		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_CollectiveTelephoneNumber	{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_CollectiveTelexNumber		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_CollectiveTelexTerminalIdentifier	{
							  ASSERT = {
								  TYPE = OBJECT;
								  SIZE = addrsize[2];
								};
							};
	KMFOID_CommonName			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ContentType			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_CounterSignature			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_CountryName			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_CrlDistributionPoints		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_CrlNumber			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_CrlReason			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_CrossCertificatePair		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_DNQualifier			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_DSA				{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_DeltaCrlIndicator		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_Description			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_DestinationIndicator		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_DistinguishedName		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_c2pnb163v1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_c2pnb163v2			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_c2pnb163v3			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_c2pnb176v1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_c2pnb208w1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_c2pnb272w1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_c2pnb304w1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_c2pnb368w1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_c2tnb191v1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_c2tnb191v2			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_c2tnb191v3			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_c2tnb239v1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_c2tnb239v2			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_c2tnb239v3			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_c2tnb359v1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_c2tnb431r1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_prime192v2			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_prime192v3			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_secp112r1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_secp112r2			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_secp128r1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_secp128r2			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_secp160k1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_secp160r1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_secp160r2			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_secp192k1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_secp192r1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_secp224k1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_secp224r1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_secp256k1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_secp256r1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_secp384r1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_secp521r1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_sect113r1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_sect113r2			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_sect131r1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_sect131r2			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_sect163k1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_sect163r1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_sect163r2			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_sect193r1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_sect193r2			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_sect233k1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_sect233r1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_sect239k1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_sect283k1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_sect283r1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_sect409k1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_sect409r1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_sect571k1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ECC_sect571r1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_EC_PUBLIC_KEY			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_EmailAddress			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_EnhancedSearchGuide		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ExtendedCertificateAttributes		{
							  ASSERT = {
								  TYPE = OBJECT;
								  SIZE = addrsize[2];
								};
							};
	KMFOID_ExtendedKeyUsage			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ExtensionRequest			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_FacsimileTelephoneNumber		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_GenerationQualifier		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_GivenName			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_HoldInstructionCode		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_HouseIdentifier			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_Initials				{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_InternationalISDNNumber		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_InvalidityDate			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_IssuerAltName			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_IssuingDistributionPoints	{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_KeyUsage				{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_KeyUsageRestriction		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_KnowledgeInformation		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_LocalityName			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_MD2WithRSA			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_MD5				{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_MD5WithRSA			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_MS_KP_SCLogon			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_MS_KP_SCLogon_UPN		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_Member				{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_MessageDigest			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_Name				{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_NameConstraints			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ObjectClass			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_OrganizationName			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_OrganizationalUnitName		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_Owner				{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PKINIT_ClientAuth		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PKINIT_Kdc			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PKINIT_san			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PKIX_KP_ClientAuth		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PKIX_KP_CodeSigning		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PKIX_KP_EmailProtection		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PKIX_KP_IPSecEndSystem		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PKIX_KP_IPSecTunnel		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PKIX_KP_IPSecUser		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PKIX_KP_OCSPSigning		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PKIX_KP_ServerAuth		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PKIX_KP_TimeStamping		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PKIX_PQ_CPSuri			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PKIX_PQ_Unotice			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PhysicalDeliveryOfficeName		{
							  ASSERT = {
								  TYPE = OBJECT;
								  SIZE = addrsize[2];
								};
							};
	KMFOID_PkixAdCaIssuers			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PkixAdOcsp			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PolicyConstraints		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PolicyMappings			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PostOfficeBox			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PostalAddress			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PostalCode			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PreferredDeliveryMethod		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PresentationAddress		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_PrivateKeyUsagePeriod		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_ProtocolInformation		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_RFC822mailbox			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_RSA				{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_RegisteredAddress		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_RoleOccupant			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SHA1				{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SHA1WithDSA			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SHA1WithECDSA			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SHA1WithRSA			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SHA224				{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SHA224WithDSA			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SHA224WithECDSA			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SHA256				{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SHA256WithDSA			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SHA256WithECDSA			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SHA256WithRSA			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SHA384				{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SHA384WithECDSA			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SHA384WithRSA			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SHA512				{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SHA512WithECDSA			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SHA512WithRSA			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SearchGuide			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SeeAlso				{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SerialNumber			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SigningTime			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_StateProvinceName		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_StreetAddress			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SubjectAltName			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SubjectDirectoryAttributes		{
							  ASSERT = {
								  TYPE = OBJECT;
								  SIZE = addrsize[2];
								};
							};
	KMFOID_SubjectKeyIdentifier			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_SupportedApplicationContext		{
							  ASSERT = {
								  TYPE = OBJECT;
								  SIZE = addrsize[2];
								};
							};
	KMFOID_Surname				{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_TelephoneNumber			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_TelexNumber			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_TelexTerminalIdentifier		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_Title				{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_UniqueIdentifier			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_UniqueMember			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_UnstructuredAddress		{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_UnstructuredName			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_UserCertificate			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_UserPassword			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_VerisignCertificatePolicy	{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_X9CM_DSA				{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_X9CM_DSAWithSHA1			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_X_121Address			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_domainComponent			{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	KMFOID_userid				{
						  ASSERT = {
							  TYPE = OBJECT;
							  SIZE = addrsize[2];
							};
						};
	kmf_add_cert_eku;
	kmf_add_csr_eku;
	kmf_add_policy_to_db;
	kmf_build_pk12;
	kmf_cert_to_name_mapping_initialize;
	kmf_cert_to_name_mapping_finalize;
	kmf_check_cert_date;
	kmf_check_crl_date;
	kmf_compare_rdns;
	kmf_configure_keystore;
	kmf_create_cert_file;
	kmf_create_csr_file;
	kmf_create_keypair;
	kmf_create_ocsp_request;
	kmf_create_sym_key;
	kmf_decode_csr;
	kmf_decrypt;
	kmf_delete_cert_from_keystore;
	kmf_delete_crl;
	kmf_delete_key_from_keystore;
	kmf_delete_policy_from_db;
	kmf_der_to_pem;
	kmf_dn_parser;
	kmf_download_cert;
	kmf_download_crl;
	kmf_ekuname_to_oid;
	kmf_encode_cert_record;
	kmf_encrypt;
	kmf_export_pk12;
	kmf_finalize;
	kmf_find_attr;
	kmf_find_cert;
	kmf_find_cert_in_crl;
	kmf_find_crl;
	kmf_find_key;
	kmf_find_prikey_by_cert;
	kmf_free_algoid;
	kmf_free_bigint;
	kmf_free_crl_dist_pts;
	kmf_free_data;
	kmf_free_dn;
	kmf_free_eku;
	kmf_free_eku_policy;
	kmf_free_extn;
	kmf_free_kmf_cert;
	kmf_free_kmf_key;
	kmf_free_policy_record;
	kmf_free_raw_key;
	kmf_free_raw_sym_key;
	kmf_free_signed_cert;
	kmf_free_signed_csr;
	kmf_free_spki;
	kmf_free_str;
	kmf_free_tbs_cert;
	kmf_free_tbs_csr;
	kmf_get_attr;
	kmf_get_attr_ptr;
	kmf_get_cert_auth_info_access;
	kmf_get_cert_basic_constraint;
	kmf_get_cert_crl_dist_pts;
	kmf_get_cert_eku;
	kmf_get_cert_email_str;
	kmf_get_cert_end_date_str;
	kmf_get_cert_extn;
	kmf_get_cert_extn_str;
	kmf_get_cert_extns;
	kmf_get_cert_id_data;
	kmf_get_cert_id_str;
	kmf_get_cert_issuer_str;
	kmf_get_cert_ku;
	kmf_get_cert_policies;
	kmf_get_cert_pubkey_alg_str;
	kmf_get_cert_pubkey_str;
	kmf_get_cert_serial_str;
	kmf_get_cert_sig_alg_str;
	kmf_get_cert_start_date_str;
	kmf_get_cert_subject_str;
	kmf_get_cert_validity;
	kmf_get_cert_version_str;
	kmf_get_data_format;
	kmf_get_encoded_ocsp_response;
	kmf_get_file_format;
	kmf_get_kmf_error_str;
	kmf_get_mapper_error_str;
	kmf_get_mapper_lasterror;
	kmf_get_mapper_options;
	kmf_get_ocsp_for_cert;
	kmf_get_ocsp_status_for_cert;
	kmf_get_pk11_handle;
	kmf_get_plugin_error_str;
	kmf_get_plugin_info;
	kmf_get_policy;
	kmf_get_string_attr;
	kmf_get_sym_key_value;
	kmf_hexstr_to_bytes;
	kmf_import_crl;
	kmf_import_cert;
	kmf_import_objects;
	kmf_initialize;
	kmf_is_cert_data;
	kmf_is_cert_file;
	kmf_is_crl_file;
	kmf_ku_to_string;
	kmf_list_crl;
	kmf_map_cert_to_name;
	kmf_match_cert_to_name;
	kmf_oid_to_ekuname;
	kmf_oid_to_string;
	kmf_pem_to_der;
	kmf_pk11_token_lookup;
	kmf_pk11_init_token;
	kmf_read_input_file;
	kmf_set_attr;
	kmf_set_attr_at_index;
	kmf_set_cert_basic_constraint;
	kmf_set_cert_extn;
	kmf_set_cert_issuer;
	kmf_set_cert_issuer_altname;
	kmf_set_cert_ku;
	kmf_set_cert_pubkey;
	kmf_set_cert_serial;
	kmf_set_cert_sig_alg;
	kmf_set_cert_subject;
	kmf_set_cert_subject_altname;
	kmf_set_cert_validity;
	kmf_set_cert_version;
	kmf_set_csr_extn;
	kmf_set_csr_ku;
	kmf_set_csr_pubkey;
	kmf_set_csr_sig_alg;
	kmf_set_csr_subject;
	kmf_set_csr_subject_altname;
	kmf_set_csr_version;
	kmf_set_mapper_lasterror;
	kmf_set_mapper_options;
	kmf_set_policy;
	kmf_set_token_pin;
	kmf_sign_cert;
	kmf_sign_csr;
	kmf_sign_data;
	kmf_store_cert;
	kmf_store_key;
	kmf_string_to_ku;
	kmf_string_to_oid;
	kmf_validate_cert;
	kmf_verify_cert;
	kmf_verify_crl_file;
	kmf_verify_csr;
	kmf_verify_data;
	kmf_verify_policy;
    local:
	*;
};


SYMBOL_VERSION SUNWprivate_1.1 {
    global:
	copy_extension_data;
	dup_entry;
	free_entry;
	free_entrylist;
	get_entrylist;
	get_mapper_pathname;
	get_pk11_data;
	GetIDFromSPKI;
	IsEqualOid;
	kmf_create_pk11_session;
	kmf_dn_to_string;
	kmf_select_token;
	parsePolicyElement;
	PKCS_DigestData;
	PKCS_EncryptData;
	PKCS_VerifyData;
	x509_algid_to_algoid;
	x509_algoid_to_algid;
    local:
	*;
};
