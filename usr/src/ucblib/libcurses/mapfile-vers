#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright (c) 2006, 2010, Oracle and/or its affiliates. All rights reserved.
#

#
# MAPFILE HEADER START
#
# WARNING:  STOP NOW.  DO NOT MODIFY THIS FILE.
# Object versioning must comply with the rules detailed in
#
#	usr/src/lib/README.mapfiles
#
# You should not be making modifications here until you've read the most current
# copy of that file. If you need help, contact a gatekeeper for guidance.
#
# MAPFILE HEADER END
#

$mapfile_version 2

SYMBOL_VERSION SUNW_1.1 {
    global:
	AL		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	AL_PARM		{
			  ASSERT = {
				  TYPE = OBJECT;
				  SIZE = addrsize;
				};
			};
	AM		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	BC		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	box;
	BS		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	BT		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	CA		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	CD		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	CE		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	CL		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	CM		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	COLS		{ ASSERT = { TYPE = OBJECT; SIZE = 4; }; };
	CR		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	CS		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	curscr		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	DA		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	DB		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	DC		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	Def_term	{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	delwin;
	DL		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	DL_PARM		{
			  ASSERT = {
				  TYPE = OBJECT;
				  SIZE = addrsize;
				};
			};
	DM		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	DO		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	DOWN_PARM	{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	_echoit		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	ED		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	EI		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	endwin;
	_endwin		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	EO		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	getcap;
	gettmode;
	GT		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	HC		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	HO		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	HZ		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	IC		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	idlok;
	IM		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	IN		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	initscr;
	IP		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	K0		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	K1		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	K2		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	K3		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	K4		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	K5		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	K6		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	K7		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	K8		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	K9		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	KD		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	KE		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	KH		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	KL		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	KR		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	KS		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	KU		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	LEFT_PARM	{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	LINES		{ ASSERT = { TYPE = OBJECT; SIZE = 4; }; };
	LL		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	longname;
	MA		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	MI		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	MS		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	mvcur;
	mvprintw;
	mvscanw;
	mvwin;
	mvwprintw;
	mvwscanw;
	My_term		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	NC		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	ND		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	newwin;
	NL		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	NONL		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	normtty		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	NS		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	OS		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	overlay;
	overwrite;
	PC		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	_pfast		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	printw;
	_rawmode	{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	RC		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	_res_flg	{ ASSERT = { TYPE = OBJECT; SIZE = 4; }; };
	RIGHT_PARM	{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	SC		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	scanw;
	scroll;
	SE		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	setterm;
	SF		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	SO		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	SR		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	stdscr		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	subwin;
	TA		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	TE		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	TI		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	touchline;
	touchwin;
	_tty		{ ASSERT = { TYPE = OBJECT; SIZE = 8; }; };
	_tty_ch		{ ASSERT = { TYPE = OBJECT; SIZE = 4; }; };
	ttytype		{ ASSERT = { TYPE = OBJECT; SIZE = 50; }; };
	UC		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	UE		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	UL		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	_unctrl		{
			  ASSERT = {
				  TYPE = OBJECT;
				  SIZE = addrsize[128];
				};
			};
	UP		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	UP_PARM		{
			  ASSERT = {
				  TYPE = OBJECT;
				  SIZE = addrsize;
				};
			};
	UPPERCASE	{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	US		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	VB		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	VE		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	VS		{ ASSERT = { TYPE = OBJECT; SIZE = addrsize; }; };
	waddch;
	waddstr;
	wclear;
	wclrtobot;
	wclrtoeol;
	wdelch;
	wdeleteln;
	werase;
	wgetch;
	wgetstr;
	winsch;
	winsertln;
	wmove;
	wprintw;
	wrefresh;
	wscanw;
	wstandend;
	wstandout;
	XB		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	XN		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	XS		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	XT		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
	XX		{ ASSERT = { TYPE = OBJECT; SIZE = 1; }; };
};

SYMBOL_VERSION SUNWprivate_1.1 {
    global:
	_putchar;
    local:
	*;
};
